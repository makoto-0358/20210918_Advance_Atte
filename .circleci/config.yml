version: 2.1

jobs:
  build:
    # working_directory: ~/project/src
    docker:
      - image: cimg/php:7.4-browsers
      - image: cimg/mysql:8.0

    environment:
      - DB_CONNECTION: testing

    steps:
      - checkout
        # path: ~/project

      - run:
          name: Linux OS のパッケージリスト更新
          command: sudo apt-get update

      - run:
          name: イメージに同梱されているPHP拡張モジュールをインストール
          command: sudo -E docker-php-ext-install pdo_mysql

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
            # - v1-dependencies-{{ checksum "composer.json" }}
            # - v1-dependencies-
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "composer.json" }}
      #       - v1-dependencies-

      - run:
          name: composer 依存関係をインストール
          command: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ chechsum "composer.lock" }}
          # key: v1-dependencies-{{ chechsum "composer.json" }}
          paths: -./vendor

      - restore_cache:
          keys:
            - node-v1-{{ chechsum "package-lock.json" }}
            - node-v1-

      # - run:
      #     name: node_modules 依存関係をインストール
      #     command: npm install

      # - save_cache:
      #     key: node-v1-{{ checksum "package-lock.json" }}
      #     paths: -node_modules

      # - run:
      #     name: .env ファイルを復元
      #     command: echo $ENV_FILE | base64 --decode > .env

      # - run :
      #     name: マイグレーションを実行
      #     command: php artisan migrate --env=testing --force

      # - run: mkdir -p test_results

      - run:
          name: テストを実行
          # command: ./vendor/bin/phpunit --testdox-xmltest_results?phpunit/result.xml --coverage-html=coverage
          command: ./vendor/bin/phpunit

      # - store_test_results:
      #     path: test_results

      # - store_artifacts:
      #     path: test_results

      # -store_artifacts:
      #     path: coverage

  # workflows:
  #   main:
  #     jobs:
  #       -build_and_test

  # - run: sudo apt-get update
  # - run: sudo docker-php-ext-install pdo_mysql

  #       - save_cache:
  #           key: v1-dependencies-{{ checksum "composer.json" }}
  #           paths:
  #             - ./vendor

  #       - run: ./vendor/bin/phpunit

  deploy-prod:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: heroku deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PROD.git main
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME_PROD}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: main
